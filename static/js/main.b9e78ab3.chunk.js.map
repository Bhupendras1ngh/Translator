{"version":3,"sources":["components/TextForm.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","Fragment","className","style","color","mode","heading","value","onChange","event","target","background","id","rows","onClick","newText","toUpperCase","showAlert","type","toLowerCase","split","length","Navbar","concat","href","title","data-bs-hrefggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","AboutText","enableDarkMode","role","htmlFor","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b9e78ab3.chunk.js","sourcesContent":["import React  ,{useState} from 'react'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUPClick = () =>{\r\n        //console.log(\"Upper caee was clicked \" + text );\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Coverted to upper case\" ,\"Success\")\r\n        \r\n    }\r\n    const handleClearClick = () =>{\r\n        //console.log(\"Upper caee was clicked \" + text );\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n    const handleLOClick = () =>{\r\n       // console.log(\"Upper caee was clicked \" + text );\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Coverted to lower case\" ,\"Success\")\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        //console.log(\"On Changed\");\r\n        setText(event.target.value);\r\n    }\r\n  const [text ,setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style ={{color :props.mode ==='dark' ?'blue':'dark'}}>\r\n        <h2 >{props.heading} </h2>\r\n        <div className=\"mb-3\">\r\n         \r\n            <textarea className=\"form-control\" value  = {text}  onChange ={handleOnChange} style ={{background :props.mode ==='light' ?'#495057':'BLACK' , color :props.mode ==='dark' ?'white':'RED'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className =\"btn btn-primary\"  onClick = {handleUPClick}>Convert to upper case</button>\r\n        <button type=\"button\" className=\"btn btn-success mx-2\"  onClick = {handleLOClick}>Convert to Lower case</button>\r\n        <button type=\"button\" className=\"btn btn-success mx-1\"  onClick = {handleClearClick}>Clear Text</button>\r\n        \r\n        \r\n      \r\n    </div>\r\n    <div className='container my-3' style ={{color :props.mode ==='dark' ?'white':'purple'}}>\r\n        \r\n        <p> <b>Word_count :</b> = { text.split(\" \").length -1 }     </p>\r\n        <p> <b>Charcater_count :</b> {text.length}</p>\r\n        <p><b>Reading_time </b>: {text.length === 0 ? 0:0.008 * text.split(\" \").length} ms</p>\r\n\r\n        \r\n       \r\n        <h3> <u>Preview</u></h3>\r\n        <p>{text.length >0 ? text :\"review text here..... \" }</p>\r\n        </div>\r\n        </>\r\n\r\n   \r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className ={`navbar navbar-expand-lg navbar-${props.mode } bg-${props.mode}`} >\r\n          <div className =\"container-fluid\">\r\n          <a className =\"navbar-brand\" href =\"#\">{props.title}</a>\r\n          <buthrefn className =\"navbar-toggler\" type=\"button\" data-bs-hrefggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"toggle navigation\">\r\n            <span className =\"navbar-toggler-icon\"></span>\r\n          </buthrefn>\r\n          <div className =\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className =\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className =\"nav-item\">\r\n                <a className =\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className =\"nav-item\">\r\n                <a className =\"nav-a\" href=\"/\">{props.AboutText}</a>\r\n              </li>\r\n            </ul>\r\n            {/*<form className =\"d-flex\">\r\n              <input className =\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <buthrefn className =\"btn btn-outline-success\" type=\"submit\">Search</buthrefn>\r\n            </form>\r\n  */}\r\n            <div className={`form-check form-switch text-${props.mode ==='light' ?'black':'white'}`} >\r\n                <input className=\"form-check-input\" onClick = {props.enableDarkMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable SecondMode</label>\r\n            </div>\r\n          </div>\r\n          </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes ={\r\n                   title : PropTypes.string,\r\n                   aboutText : PropTypes.string} ","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n   \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong> : {props.alert.msg} </div>\r\n            \r\n    \r\n  )\r\n}\r\n","//import logo from './logo.svg';\nimport './App.css';\n//let name  = \"bhupendra Singh\"\nimport TextForm from './components/TextForm';\nimport Navbar from './components/Navbar';\n//import About from './components/About';\nimport Alert from './components/Alert';\nimport React ,{ useState } from 'react';\n\n//import React from \"react\";\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n*/\n\nfunction App() {\n\n  const [mode , setMode] = useState('light'); // whetehr dark mod is enable or not \n  const [alert , setAlert] = useState(null);\n  \n  const showAlert =(message ,type)=>{\n  setAlert({\n    msg: message ,\n    type :type\n  })\n  setTimeout(()=>{\n    setAlert(\" \");\n  } ,1000)\n  }\n\nif(mode === 'light'){\n  document.body.style.backgroundColor ='#bd9b8ed6';\n}\nelse{\n  document.body.style.backgroundColor ='#0e1133';\n}\n\n\n\n\n  \n  const enableDarkMode = ()=> {\n    if(mode === 'light'){\n       setMode('dark')\n       document.body.style.backgroundColor ='#0e1133';\n       showAlert(\"Dark mode has been activated , Success!\");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor ='#bd9b8ed6';\n      showAlert(\"grey mode has been activated , Success!\");\n    }\n  }\n  return (\n    <>\n    {/*<Router>*/}\n    <Navbar title =\"F1_soft\"  mode = {mode}  enableDarkMode ={enableDarkMode}/>\n    <Alert alert ={alert}/> \n    \n    <div className=\"container my-3\">\n      \n    {/*<Switch>\n          <Route exact path=\"/About\">\n            <About />\n          </Route>\n         \n          <Route exact path=\"/\">\n           \n           \n          </Route>\n        </Switch>\n    \n   \n    </Router>\n  */}\n  <TextForm showAlert ={showAlert} heading = \"Enter the text to Analyse\"   mode = {mode} />  \n     </div>\n    \n    \n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}